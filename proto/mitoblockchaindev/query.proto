syntax = "proto3";
package mitoblockchaindev.mitoblockchaindev;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "mitoblockchaindev/params.proto";
// this line is used by starport scaffolding # 1
import "mitoblockchaindev/discount_token.proto";

option go_package = "mitoblockchaindev/x/mitoblockchaindev/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/mitoblockchaindev/mitoblockchaindev/params";
  }
  // Queries a list of DiscountTokens items.
	rpc DiscountTokens(QueryDiscountTokensRequest) returns (QueryDiscountTokensResponse) {
		option (google.api.http).get = "/mitoblockchaindev/mitoblockchaindev/discount_tokens";
	}

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryDiscountTokensRequest {
  // Adding pagination to request
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryDiscountTokensResponse {
   // Returning a list of discount tokens
  repeated DiscountToken discountToken = 1;

  // Adding pagination to response
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
